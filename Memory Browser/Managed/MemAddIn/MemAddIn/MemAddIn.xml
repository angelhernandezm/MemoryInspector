<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MemAddIn</name>
    </assembly>
    <members>
        <member name="T:MemAddIn.UI.Windows.MainToolWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:MemAddIn.UI.Windows.MainToolWindow.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MemAddIn.UI.Windows.MainToolWindow.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MemAddIn.UI.Windows.MainToolWindow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MemAddIn.UI.Windows.MainToolWindow.GetAddInPath">
            <summary>
            Gets the add in path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MemAddIn.UI.Windows.MainToolWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MemAddIn.UI.Windows.MainToolWindow"/> class.
            </summary>
        </member>
        <member name="M:MemAddIn.UI.Windows.MainToolWindow.MainToolWindow_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SizeChanged event of the MainToolWindow control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:MemAddIn.UI.Windows.MainToolWindow.Application">
            <summary>
            Gets or sets the application.
            </summary>
            <value>The application.</value>
        </member>
        <member name="P:MemAddIn.UI.Windows.MainToolWindow.wpfWindowHwnd">
            <summary>
            Gets or sets the WPF window HWND.
            </summary>
            <value>The WPF window HWND.</value>
        </member>
        <member name="P:MemAddIn.UI.Windows.MainToolWindow.IsWPFWindowPresent">
            <summary>
            Gets a value indicating whether this instance is WPF window present.
            </summary>
            <value>
            	<c>true</c> if this instance is WPF window present; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MemAddIn.Connect">
            <summary>The object for implementing an Add-in.</summary>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MemAddIn.Connect.#ctor">
            <summary>Implements the constructor for the Add-in object. Place your initialization code within this method.</summary>
        </member>
        <member name="M:MemAddIn.Connect.LaunchExternalWPFWindow">
            <summary>
            Launches the external WPF window.
            </summary>
        </member>
        <member name="M:MemAddIn.Connect.ShowToolWindow">
            <summary>
            Shows the tool window.
            </summary>
        </member>
        <member name="M:MemAddIn.Connect.OnConnection(System.Object,Extensibility.ext_ConnectMode,System.Object,System.Array@)">
            <summary>Implements the OnConnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being loaded.</summary>
            <param term='application'>Root object of the host application.</param>
            <param term='connectMode'>Describes how the Add-in is being loaded.</param>
            <param term='addInInst'>Object representing this Add-in.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MemAddIn.Connect.OnDisconnection(Extensibility.ext_DisconnectMode,System.Array@)">
            <summary>Implements the OnDisconnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being unloaded.</summary>
            <param term='disconnectMode'>Describes how the Add-in is being unloaded.</param>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MemAddIn.Connect.OnAddInsUpdate(System.Array@)">
            <summary>Implements the OnAddInsUpdate method of the IDTExtensibility2 interface. Receives notification when the collection of Add-ins has changed.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />		
        </member>
        <member name="M:MemAddIn.Connect.OnStartupComplete(System.Array@)">
            <summary>Implements the OnStartupComplete method of the IDTExtensibility2 interface. Receives notification that the host application has completed loading.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MemAddIn.Connect.OnBeginShutdown(System.Array@)">
            <summary>Implements the OnBeginShutdown method of the IDTExtensibility2 interface. Receives notification that the host application is being unloaded.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:MemAddIn.Connect.QueryStatus(System.String,EnvDTE.vsCommandStatusTextWanted,EnvDTE.vsCommandStatus@,System.Object@)">
            <summary>Implements the QueryStatus method of the IDTCommandTarget interface. This is called when the command's availability is updated</summary>
            <param term='commandName'>The name of the command to determine state for.</param>
            <param term='neededText'>Text that is needed for the command.</param>
            <param term='status'>The state of the command in the user interface.</param>
            <param term='commandText'>Text requested by the neededText parameter.</param>
            <seealso class='Exec' />
        </member>
        <member name="M:MemAddIn.Connect.Exec(System.String,EnvDTE.vsCommandExecOption,System.Object@,System.Object@,System.Boolean@)">
            <summary>Implements the Exec method of the IDTCommandTarget interface. This is called when the command is invoked.</summary>
            <param term='commandName'>The name of the command to execute.</param>
            <param term='executeOption'>Describes how the command should be run.</param>
            <param term='varIn'>Parameters passed from the caller to the command handler.</param>
            <param term='varOut'>Parameters passed from the command handler to the caller.</param>
            <param term='handled'>Informs the caller if the command was handled or not.</param>
            <seealso class='Exec' />
        </member>
        <member name="M:MemAddIn.Code.Interop.IsWindow(System.IntPtr)">
            <summary>
            Determines whether the specified h WND is window.
            </summary>
            <param name="hWnd">The h WND.</param>
            <returns>
            	<c>true</c> if the specified h WND is window; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MemAddIn.Code.Interop.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            Shows the window.
            </summary>
            <param name="hWnd">The h WND.</param>
            <param name="nCmdShow">The n CMD show.</param>
            <returns></returns>
        </member>
        <member name="M:MemAddIn.Code.Interop.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            Sets the parent.
            </summary>
            <param name="hWndChild">The h WND child.</param>
            <param name="hWndNewParent">The h WND new parent.</param>
            <returns></returns>
        </member>
    </members>
</doc>
